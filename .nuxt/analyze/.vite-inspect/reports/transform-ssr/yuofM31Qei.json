{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/esm-node/src/components/va-button/VaButton.vue_vue_type_script_lang.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, computed, toRefs, shallowRef } from \"vue\";\nimport { p as pick } from \"../../../vendor.mjs\";\nimport { u as useButtonBackground } from \"./hooks/useButtonBackground.mjs\";\nimport { u as useButtonAttributes } from \"./hooks/useButtonAttributes.mjs\";\nimport { u as useButtonTextColor } from \"./hooks/useButtonTextColor.mjs\";\nimport { V as VaIcon } from \"../va-icon/index.mjs\";\nimport { V as VaProgressCircle } from \"../va-progress-circle/index.mjs\";\nimport { u as useHoverStyleProps } from \"../../composables/useHoverStyle.mjs\";\nimport { u as usePressedStyleProps } from \"../../composables/usePressedStyle.mjs\";\nimport { u as useLoadingProps } from \"../../composables/useLoading.mjs\";\nimport { u as useRouterLinkProps, a as useRouterLink } from \"../../composables/useRouterLink.mjs\";\nimport { u as useFocus } from \"../../composables/useFocus.mjs\";\nimport { u as useHover } from \"../../composables/useHover.mjs\";\nimport { u as usePressed } from \"../../composables/usePressed.mjs\";\nimport { u as useSlotPassed } from \"../../composables/useSlotPassed.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.mjs\";\nimport { u as useSizeProps, a as useSize } from \"../../composables/useSize.mjs\";\nimport { u as useColors } from \"../../composables/useColors.mjs\";\nimport { u as useBem } from \"../../composables/useBem.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaButton\",\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useComponentPresetProp,\n    ...useSizeProps,\n    ...useHoverStyleProps,\n    ...usePressedStyleProps,\n    ...useLoadingProps,\n    ...useRouterLinkProps,\n    tag: { type: String, default: \"button\" },\n    type: { type: String, default: \"button\" },\n    block: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    color: { type: String, default: \"primary\" },\n    textColor: { type: String, default: \"\" },\n    textOpacity: { type: Number, default: 1 },\n    backgroundOpacity: { type: Number, default: 1 },\n    borderColor: { type: String, default: \"\" },\n    // only for filled bg state\n    gradient: { type: Boolean, default: false },\n    plain: { type: Boolean, default: false },\n    round: { type: Boolean, default: false },\n    size: {\n      type: String,\n      default: \"medium\",\n      validator: (v) => [\"small\", \"medium\", \"large\"].includes(v)\n    },\n    icon: { type: String, default: \"\" },\n    iconRight: { type: String, default: \"\" },\n    iconColor: { type: String, default: \"\" }\n  },\n  setup(props) {\n    const { getColor } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const { sizeComputed } = useSize(props);\n    const iconSizeComputed = computed(() => {\n      const size = /([0-9]*)(px)/.exec(sizeComputed.value);\n      return size ? `${+size[1] / 2}${size[2]}` : sizeComputed.value;\n    });\n    const { tagComputed } = useRouterLink(props);\n    const attributesComputed = useButtonAttributes(props);\n    const { disabled } = toRefs(props);\n    const button = shallowRef();\n    const { focus, blur } = useFocus(button);\n    const { isHovered } = useHover(button, disabled);\n    const { isPressed } = usePressed(button);\n    const iconColorComputed = computed(() => props.iconColor ? getColor(props.iconColor) : textColorComputed.value);\n    const iconAttributesComputed = computed(() => ({\n      color: iconColorComputed.value,\n      size: props.size\n    }));\n    const wrapperClassComputed = computed(() => ({ \"va-button__content--loading\": props.loading }));\n    const isSlotContentPassed = useSlotPassed();\n    const isOneIcon = computed(() => !!(props.iconRight && !props.icon || !props.iconRight && props.icon));\n    const isOnlyIcon = computed(() => !isSlotContentPassed.value && isOneIcon.value);\n    const computedClass = useBem(\"va-button\", () => ({\n      ...pick(props, [\"disabled\", \"block\", \"loading\", \"round\", \"plain\"]),\n      small: props.size === \"small\",\n      normal: !props.size || props.size === \"medium\",\n      large: props.size === \"large\",\n      opacity: props.textOpacity < 1,\n      bordered: !!props.borderColor,\n      iconOnly: isOnlyIcon.value,\n      leftIcon: !isOnlyIcon.value && !!props.icon && !props.iconRight,\n      rightIcon: !isOnlyIcon.value && !props.icon && !!props.iconRight\n    }));\n    const isTransparentBg = computed(() => props.plain || props.backgroundOpacity < 0.5);\n    const { textColorComputed } = useTextColor(colorComputed, isTransparentBg);\n    const {\n      backgroundColor,\n      backgroundColorOpacity,\n      backgroundMaskOpacity,\n      backgroundMaskColor\n    } = useButtonBackground(colorComputed, isPressed, isHovered);\n    const contentColorComputed = useButtonTextColor(textColorComputed, colorComputed, isPressed, isHovered);\n    const computedStyle = computed(() => ({\n      borderColor: props.borderColor ? getColor(props.borderColor) : \"transparent\",\n      ...contentColorComputed.value\n    }));\n    return {\n      button,\n      tagComputed,\n      computedClass,\n      computedStyle,\n      textColorComputed,\n      iconSizeComputed,\n      attributesComputed,\n      wrapperClassComputed,\n      iconAttributesComputed,\n      backgroundColor,\n      backgroundMaskColor,\n      backgroundMaskOpacity,\n      backgroundColorOpacity,\n      focus,\n      blur\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n//# sourceMappingURL=VaButton.vue_vue_type_script_lang.mjs.map\n",
      "start": 1709717506554,
      "end": 1709717506690,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717506690,
      "end": 1709717506690,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717506690,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717506691,
      "end": 1709717506691,
      "order": "normal"
    }
  ]
}
