{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue_vue_type_script_lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, shallowRef, toRefs, computed, onMounted, watch } from \"vue\";\nimport { c as createYearDate } from \"../../utils/date-utils.js\";\nimport { u as useGridKeyboardNavigation } from \"../../hooks/grid-keyboard-navigation.js\";\nimport { u as useDatePicker } from \"../../hooks/use-picker.js\";\nimport { V as VaDatePickerCell } from \"../VaDatePickerCell.js\";\nconst _sfc_main = defineComponent({\n  name: \"VaYearPicker\",\n  components: { VaDatePickerCell },\n  props: {\n    modelValue: { type: [Date, Array, Object] },\n    allowedYears: { type: Function, default: void 0 },\n    highlightToday: { type: Boolean, default: true },\n    startYear: { type: Number, default: 1970 },\n    mode: { type: String, default: \"auto\" },\n    view: { type: Object, default: () => ({ type: \"year\" }) },\n    endYear: { type: Number, default: () => (/* @__PURE__ */ new Date()).getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: \"primary\" }\n  },\n  emits: [\"update:modelValue\", \"hover:year\", \"click:year\"],\n  setup(props, { emit }) {\n    const rootNode = shallowRef();\n    const { view } = toRefs(props);\n    const generateYearsArray = (start, end) => {\n      const yearsCount = end - start + 1;\n      return Array.from(Array(yearsCount).keys()).map((i) => createYearDate(start + i));\n    };\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear));\n    const scrollIntoYearIndex = (index) => {\n      if (!rootNode.value) {\n        return;\n      }\n      const scrollHeight = rootNode.value.scrollHeight;\n      const rootNodeHeight = rootNode.value.offsetHeight;\n      const currentYearOffset = scrollHeight / years.value.length * index;\n      const cellSize = scrollHeight / years.value.length;\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop;\n      if (relativeScrollPosition < 0) {\n        rootNode.value.scrollTo({ top: currentYearOffset });\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize });\n      }\n    };\n    const scrollIntoYearIndexCenter = (index) => {\n      if (!rootNode.value) {\n        return;\n      }\n      const scrollHeight = rootNode.value.scrollHeight;\n      const rootNodeHeight = rootNode.value.offsetHeight;\n      const currentYearOffset = scrollHeight / years.value.length * index;\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 });\n    };\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year);\n      scrollIntoYearIndexCenter(currentYearIndex);\n    });\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange\n    } = useDatePicker(\"year\", years, props, emit);\n    const isYearDisabled = (year) => props.allowedYears === void 0 ? false : !props.allowedYears(year);\n    const {\n      focusedCellIndex,\n      containerAttributes\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex])\n    });\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index));\n    watch(focusedCellIndex, (index) => {\n      hoveredIndex.value = index;\n    });\n    watch(hoveredIndex, (index) => {\n      focusedCellIndex.value = index;\n    });\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n\nimport '../../../../../VaYearPicker.css';\n//# sourceMappingURL=VaYearPicker.vue_vue_type_script_lang.js.map\n",
      "start": 1709717428575,
      "end": 1709717429274,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717429274,
      "end": 1709717429274,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717429274,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717429282,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717429282,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717429282,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717429282,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717429282,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717429282,
      "end": 1709717429282,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717429282,
      "end": 1709717429285,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717429285,
      "end": 1709717429285,
      "order": "normal"
    }
  ]
}
