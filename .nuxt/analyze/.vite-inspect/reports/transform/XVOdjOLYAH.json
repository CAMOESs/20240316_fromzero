{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/services/global-config/global-config.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { c as cloneDeep } from \"../../../vendor.js\";\nimport { ref, getCurrentInstance } from \"vue\";\nimport { g as getBreakpointDefaultConfig } from \"../breakpoint/index.js\";\nimport { g as getCurrentApp } from \"../current-app.js\";\nimport { m as mergeDeep } from \"../../utils/merge-deep.js\";\nimport { g as getColorsClassesDefaultConfig } from \"../colors-classes/config/default.js\";\nimport { g as getColorDefaultConfig } from \"../color/config/default.js\";\nimport { g as getIconDefaultConfig } from \"../icon/config/default.js\";\nimport { g as getComponentsDefaultConfig } from \"../component-config/config/default.js\";\nimport { g as getI18nConfigDefaults } from \"../i18n/config/default.js\";\nconst GLOBAL_CONFIG = Symbol(\"GLOBAL_CONFIG\");\nconst getDefaultConfig = () => ({\n  colors: getColorDefaultConfig(),\n  icons: getIconDefaultConfig(),\n  components: getComponentsDefaultConfig(),\n  breakpoint: getBreakpointDefaultConfig(),\n  i18n: getI18nConfigDefaults(),\n  colorsClasses: getColorsClassesDefaultConfig(),\n  /**\n   * global config variable to pass nuxt-link component to vuestic-ui via @vuestic/nuxt\n   * TODO: give a try to integrate inertia js router components via this option\n   * TODO: if this try won't be success, may be remake to provide/inject\n   */\n  routerComponent: void 0\n});\nconst createGlobalConfig = (defaultConfig = {}) => {\n  const globalConfig = ref(mergeDeep(getDefaultConfig(), defaultConfig));\n  const getGlobalConfig = () => globalConfig.value;\n  const setGlobalConfig = (updater) => {\n    const config = typeof updater === \"function\" ? updater(globalConfig.value) : updater;\n    globalConfig.value = cloneDeep(config);\n  };\n  const mergeGlobalConfig = (updater) => {\n    const config = typeof updater === \"function\" ? updater(globalConfig.value) : updater;\n    globalConfig.value = mergeDeep(cloneDeep(globalConfig.value), config);\n  };\n  return {\n    getGlobalConfig,\n    setGlobalConfig,\n    mergeGlobalConfig,\n    globalConfig\n  };\n};\nconst provideForCurrentApp = (provide) => {\n  var _a, _b;\n  const provides = ((_a = getCurrentInstance()) == null ? void 0 : _a.appContext.provides) || ((_b = getCurrentApp()) == null ? void 0 : _b._context.provides);\n  if (!provides) {\n    throw new Error(\"Vue app not found for provide\");\n  }\n  provides[GLOBAL_CONFIG] = provide;\n  return provide;\n};\nexport {\n  GLOBAL_CONFIG as G,\n  createGlobalConfig as c,\n  provideForCurrentApp as p\n};\n//# sourceMappingURL=global-config.js.map\n",
      "start": 1709717415625,
      "end": 1709717416350,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717416351,
      "end": 1709717416351,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717416351,
      "end": 1709717416352,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717416352,
      "end": 1709717416352,
      "order": "normal"
    }
  ]
}
