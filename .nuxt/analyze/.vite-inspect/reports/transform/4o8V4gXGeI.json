{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-image/VaImage.vue_vue_type_script_lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, ref, computed, onBeforeMount, onBeforeUnmount, watch, nextTick } from \"vue\";\nimport { p as pick } from \"../../../vendor.js\";\nimport { V as VaAspectRatio } from \"../va-aspect-ratio/index.js\";\nimport { V as VaFallback } from \"../va-fallback/index.js\";\nimport { u as useNativeImgAttributesProps, a as useNativeImgAttributes } from \"./hooks/useNativeImgAttributes.js\";\nimport { u as useIntersectionObserver } from \"../../composables/useIntersectionObserver.js\";\nimport { e as extractComponentProps } from \"../../utils/component-options/extract-component-options.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useIsMounted } from \"../../composables/useIsMounted.js\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props.js\";\nimport { u as useGlobalConfig } from \"../../composables/useGlobalConfig.js\";\nconst VaFallbackProps = extractComponentProps(VaFallback);\nconst _sfc_main = defineComponent({\n  name: \"VaImage\",\n  components: { VaAspectRatio, VaFallback },\n  emits: [\"loaded\", \"error\", \"fallback\"],\n  props: {\n    ...useComponentPresetProp,\n    ...useNativeImgAttributesProps,\n    ...VaFallbackProps,\n    ratio: {\n      type: [Number, String],\n      default: \"auto\",\n      validator: (v) => {\n        if (typeof v === \"number\") {\n          return v > 0;\n        }\n        return v === \"auto\";\n      }\n    },\n    fit: {\n      type: String,\n      default: \"cover\"\n    },\n    maxWidth: {\n      type: Number,\n      default: 0,\n      validator: (v) => v >= 0\n    },\n    lazy: { type: Boolean, default: false },\n    placeholderSrc: { type: String, default: \"\" }\n  },\n  setup(props, { emit, slots }) {\n    const root = ref();\n    const image = ref();\n    const renderedImage = ref();\n    const currentImage = computed(() => renderedImage.value || props.src);\n    const imgWidth = ref(1);\n    const imgHeight = ref(1);\n    const isLoading = ref(false);\n    const isError = ref(false);\n    const handleLoad = () => {\n      var _a;\n      isLoading.value = true;\n      if (!isReadyForLoad.value) {\n        return;\n      }\n      isLoading.value = false;\n      renderedImage.value = (_a = image.value) == null ? void 0 : _a.currentSrc;\n      getImgSizes();\n      emit(\"loaded\", currentImage.value);\n    };\n    const handleError = (err) => {\n      isError.value = true;\n      isLoading.value = false;\n      emit(\"error\", err || currentImage.value);\n    };\n    const isIntersecting = ref(false);\n    const handleIntersection = (entries, observer) => {\n      entries.forEach((entry) => {\n        if (!entry.isIntersecting) {\n          return;\n        }\n        isIntersecting.value = true;\n        init();\n        observer.disconnect();\n      });\n    };\n    const { isIntersectionDisabled } = useIntersectionObserver(handleIntersection, void 0, root, props.lazy);\n    const isReadyForLoad = computed(() => isIntersectionDisabled.value || isIntersecting.value);\n    const isMounted = useIsMounted();\n    const isReadyForRender = computed(() => !props.lazy || props.lazy && isMounted.value && isReadyForLoad.value);\n    const init = () => {\n      if (!props.src || isLoading.value && isIntersectionDisabled.value || !isReadyForLoad.value) {\n        return;\n      }\n      isLoading.value = true;\n      isError.value = false;\n      nextTick(() => {\n        var _a;\n        if (!((_a = image.value) == null ? void 0 : _a.complete)) {\n          return;\n        }\n        if (!image.value.naturalWidth) {\n          handleError();\n          return;\n        }\n        handleLoad();\n      });\n    };\n    let timer;\n    const getImgSizes = () => {\n      clearTimeout(timer);\n      if (isLoading.value) {\n        timer = window.setTimeout(getImgSizes, 100);\n      }\n      const { naturalHeight, naturalWidth } = image.value || {};\n      if (naturalHeight && naturalWidth) {\n        imgWidth.value = naturalHeight;\n        imgHeight.value = naturalWidth;\n      }\n    };\n    onBeforeMount(init);\n    onBeforeUnmount(() => clearTimeout(timer));\n    watch(() => props.src, init);\n    const isPlaceholderPassed = computed(() => {\n      var _a;\n      return ((_a = slots == null ? void 0 : slots.placeholder) == null ? void 0 : _a.call(slots)) || props.placeholderSrc;\n    });\n    const isLoaderShown = computed(() => {\n      var _a;\n      return isLoading.value && !((_a = slots == null ? void 0 : slots.loader) == null ? void 0 : _a.call(slots));\n    });\n    const isErrorShown = computed(() => {\n      var _a;\n      return isError.value && (!((_a = slots == null ? void 0 : slots.error) == null ? void 0 : _a.call(slots)) && !isAnyFallbackPassed.value);\n    });\n    const isPlaceholderShown = computed(() => (isLoaderShown.value || isErrorShown.value) && isPlaceholderPassed.value);\n    const isSuccessfullyLoaded = computed(() => !(isLoading.value || isError.value));\n    const imgAttributesComputed = useNativeImgAttributes(props);\n    const aspectRationAttributesComputed = computed(() => ({\n      ...pick(props, [\"ratio\", \"maxWidth\"]),\n      contentWidth: imgWidth.value,\n      contentHeight: imgHeight.value\n    }));\n    const fallbackProps = filterComponentProps(VaFallbackProps);\n    const checkObjectNonEmptyValues = (obj) => !!Object.values(obj || {}).filter((prop) => prop).length;\n    const hasFallbackGlobalConfig = computed(() => {\n      var _a, _b, _c, _d;\n      return checkObjectNonEmptyValues((_d = (_c = (_b = (_a = useGlobalConfig()) == null ? void 0 : _a.globalConfig) == null ? void 0 : _b.value) == null ? void 0 : _c.components) == null ? void 0 : _d.VaFallback);\n    });\n    const isAnyFallbackPassed = computed(() => checkObjectNonEmptyValues(fallbackProps.value) || hasFallbackGlobalConfig.value);\n    const fitComputed = computed(() => props.fit);\n    return {\n      fitComputed,\n      root,\n      image,\n      isLoading,\n      handleLoad,\n      isError,\n      handleError,\n      isReadyForRender,\n      isPlaceholderShown,\n      isSuccessfullyLoaded,\n      imgAttributesComputed,\n      aspectRationAttributesComputed,\n      isAnyFallbackPassed,\n      fallbackProps\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n\nimport '../../../VaImage.css';\n//# sourceMappingURL=VaImage.vue_vue_type_script_lang.js.map\n",
      "start": 1709717422578,
      "end": 1709717422760,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717422760,
      "end": 1709717422760,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717422760,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717422761,
      "end": 1709717422761,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717422761,
      "end": 1709717422762,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717422762,
      "end": 1709717422762,
      "order": "normal"
    }
  ]
}
