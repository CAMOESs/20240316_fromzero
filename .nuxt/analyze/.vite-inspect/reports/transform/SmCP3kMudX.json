{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-affix/VaAffix.vue_vue_type_script_lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, shallowRef, computed, ref, onMounted, nextTick, onBeforeUnmount } from \"vue\";\nimport { n as noop } from \"../../../vendor.js\";\nimport { g as getWindow } from \"../../utils/ssr.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useEventsHandlerWithThrottle, h as handleThrottledEvent, g as getWindowHeight } from \"./VaAffix-utils.js\";\nconst _sfc_main = defineComponent({\n  name: \"VaAffix\",\n  emits: [\"change\"],\n  props: {\n    ...useComponentPresetProp,\n    offsetTop: { type: Number, default: void 0 },\n    offsetBottom: { type: Number, default: void 0 },\n    target: { type: [Object, Function], default: getWindow }\n  },\n  setup(props, { emit }) {\n    const element = shallowRef();\n    const getTargetElement = () => typeof props.target === \"function\" ? props.target() : props.target;\n    const isAffixed = computed(() => state.value.isTopAffixed || state.value.isBottomAffixed);\n    const state = ref({\n      isTopAffixed: false,\n      isBottomAffixed: false\n    });\n    const getState = () => state.value;\n    const setState = (newState) => {\n      state.value = newState;\n      emit(\"change\", isAffixed);\n    };\n    const calculateTop = () => {\n      const target = getTargetElement();\n      if (!target) {\n        return 0;\n      }\n      if (props.offsetTop === void 0) {\n        return;\n      }\n      if (!(target instanceof Window)) {\n        const { top } = target.getBoundingClientRect();\n        return top + props.offsetTop;\n      }\n      return props.offsetTop;\n    };\n    const calculateBottom = () => {\n      const target = getTargetElement();\n      if (!target) {\n        return 0;\n      }\n      if (props.offsetBottom === void 0) {\n        return;\n      }\n      if (!(target instanceof Window)) {\n        const { bottom } = target.getBoundingClientRect();\n        const { borderTopWidth, borderBottomWidth } = getComputedStyle(target);\n        const { offsetHeight, clientHeight } = target;\n        const scrollBarHeight = offsetHeight - clientHeight - parseInt(borderTopWidth) - parseInt(borderBottomWidth);\n        return getWindowHeight() - (bottom - props.offsetBottom) + scrollBarHeight;\n      }\n      return props.offsetBottom;\n    };\n    const convertToPixels = (calculate) => {\n      const result = calculate();\n      return result === void 0 ? void 0 : `${result}px`;\n    };\n    const computedClass = computed(() => [{ \"va-affix--affixed\": isAffixed }]);\n    const computedStyle = computed(() => ({\n      top: state.value.isTopAffixed ? convertToPixels(calculateTop) : void 0,\n      bottom: state.value.isBottomAffixed ? convertToPixels(calculateBottom) : void 0,\n      width: `${state.value.width}px`\n    }));\n    const initialPosition = ref();\n    const throttledEventHandler = (eventName, event) => {\n      const context = {\n        ...props,\n        initialPosition: initialPosition.value,\n        element: element.value,\n        target: getTargetElement(),\n        setState,\n        getState\n      };\n      if (!eventName || eventName === \"resize\") {\n        handleThrottledEvent(eventName, context);\n      } else if (event && event.target) {\n        const target = getTargetElement();\n        if (target === event.target || target instanceof Window) {\n          handleThrottledEvent(eventName, context);\n        } else {\n          setState({\n            isBottomAffixed: false,\n            isTopAffixed: false\n          });\n        }\n      }\n    };\n    let clearEventListeners = noop;\n    onMounted(() => {\n      var _a;\n      initialPosition.value = (_a = element.value) == null ? void 0 : _a.getBoundingClientRect();\n      const events = [\"scroll\", \"resize\"];\n      clearEventListeners = useEventsHandlerWithThrottle(events, {\n        handler: throttledEventHandler\n      });\n      nextTick(() => {\n        throttledEventHandler(null);\n      });\n    });\n    onBeforeUnmount(clearEventListeners);\n    return {\n      computedClass,\n      computedStyle,\n      isAffixed,\n      element\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n\nimport '../../../VaAffix.css';\n//# sourceMappingURL=VaAffix.vue_vue_type_script_lang.js.map\n",
      "start": 1709717421439,
      "end": 1709717421842,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717421842,
      "end": 1709717421842,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717421842,
      "end": 1709717421843,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717421843,
      "end": 1709717421843,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717421843,
      "end": 1709717421843,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717421843,
      "end": 1709717421843,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717421843,
      "end": 1709717421843,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717421843,
      "end": 1709717421843,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717421843,
      "end": 1709717421843,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717421844,
      "end": 1709717421844,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717421844,
      "end": 1709717421844,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717421844,
      "end": 1709717421844,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717421844,
      "end": 1709717421844,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717421844,
      "end": 1709717421844,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717421844,
      "end": 1709717421844,
      "order": "normal"
    }
  ]
}
