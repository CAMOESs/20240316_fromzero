{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-time-picker/hooks/useTimePicker.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { toRefs, ref, watch, computed } from \"vue\";\nconst safeModelValue = (m) => m.value ? m.value : new Date((/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0));\nconst createNumbersArray = (length) => Array.from(Array(length).keys());\nconst from24to12 = (h) => (h === 0 ? 12 : h) - Number(h > 12) * 12;\nconst from12to24 = (h, isAM = false) => (h === 12 ? 0 : h) + Number(isAM) * 12;\nconst createHoursColumn = (props, modelValue, isPM) => {\n  const computedSize = computed(() => props.ampm ? 12 : 24);\n  const items = computed(() => {\n    let array = createNumbersArray(computedSize.value);\n    if (props.hoursFilter) {\n      array = array.filter((i) => props.hoursFilter(props.ampm ? i + 12 * Number(isPM.value) : i));\n    }\n    return array.map((n) => {\n      return props.ampm ? from24to12(n) : n;\n    });\n  });\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) {\n        return -1;\n      }\n      if (props.ampm) {\n        const h2 = from24to12(modelValue.value.getHours() - 12 * Number(isPM.value));\n        return items.value.findIndex((i) => i === h2);\n      }\n      const h = modelValue.value.getHours();\n      return items.value.findIndex((i) => i === h);\n    },\n    set: (newIndex) => {\n      if (props.readonly) {\n        return;\n      }\n      const hours = props.ampm ? from12to24(items.value[newIndex], isPM.value) : items.value[newIndex];\n      modelValue.value = new Date(safeModelValue(modelValue).setHours(hours));\n    }\n  });\n  return computed(() => ({\n    items: items.value,\n    activeItem\n  }));\n};\nconst createMinutesColumn = (props, modelValue) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60);\n    if (!props.minutesFilter) {\n      return array;\n    }\n    return array.filter(props.minutesFilter);\n  });\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) {\n        return -1;\n      }\n      const m = modelValue.value.getMinutes();\n      return items.value.findIndex((i) => i === m);\n    },\n    set: (newIndex) => {\n      if (props.readonly) {\n        return;\n      }\n      const v = items.value[newIndex];\n      modelValue.value = new Date(safeModelValue(modelValue).setMinutes(v));\n    }\n  });\n  return computed(() => ({\n    items: items.value,\n    activeItem\n  }));\n};\nconst createSecondsColumn = (props, modelValue) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60);\n    if (!props.secondsFilter) {\n      return array;\n    }\n    return array.filter(props.secondsFilter);\n  });\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) {\n        return -1;\n      }\n      const s = modelValue.value.getSeconds();\n      return items.value.findIndex((i) => i === s);\n    },\n    set: (newIndex) => {\n      if (props.readonly) {\n        return;\n      }\n      const v = items.value[newIndex];\n      modelValue.value = new Date(safeModelValue(modelValue).setSeconds(v));\n    }\n  });\n  return computed(() => ({\n    items: items.value,\n    activeItem\n  }));\n};\nconst createPeriodColumn = (props, modelValue, isPM) => {\n  return computed(() => ({\n    items: [\"AM\", \"PM\"],\n    activeItem: computed({\n      get: () => {\n        if (!modelValue.value) {\n          return -1;\n        }\n        return Number(isPM.value);\n      },\n      set: (val) => {\n        isPM.value = Boolean(val);\n        const h = safeModelValue(modelValue).getHours();\n        let h24 = isPM.value ? h + 12 : h;\n        if (isPM.value && h <= 12) {\n          h24 = h + 12;\n        }\n        if (!isPM.value && h >= 12) {\n          h24 = h - 12;\n        }\n        const isValidFilteredHour = !props.hoursFilter || props.hoursFilter(h24);\n        if (props.periodUpdatesModelValue && isValidFilteredHour) {\n          modelValue.value = new Date(safeModelValue(modelValue).setHours(h24));\n        }\n      }\n    })\n  }));\n};\nconst useTimePicker = (props, modelValue) => {\n  const { view } = toRefs(props);\n  const isPM = ref(false);\n  watch(modelValue, () => {\n    isPM.value = safeModelValue(modelValue).getHours() >= 12;\n  }, { immediate: true });\n  const hoursColumn = createHoursColumn(props, modelValue, isPM);\n  const minutesColumn = createMinutesColumn(props, modelValue);\n  const secondsColumn = createSecondsColumn(props, modelValue);\n  const periodColumn = createPeriodColumn(props, modelValue, isPM);\n  const columns = computed(() => {\n    const array = [];\n    if (view.value === \"hours\") {\n      array.push(hoursColumn.value);\n    } else if (view.value === \"minutes\") {\n      array.push(hoursColumn.value, minutesColumn.value);\n    } else if (view.value === \"seconds\") {\n      array.push(hoursColumn.value, minutesColumn.value, secondsColumn.value);\n    }\n    if (props.ampm && !props.hidePeriodSwitch) {\n      array.push(periodColumn.value);\n    }\n    return array;\n  });\n  return {\n    columns,\n    isPM\n  };\n};\nexport {\n  useTimePicker as u\n};\n//# sourceMappingURL=useTimePicker.js.map\n",
      "start": 1709717427625,
      "end": 1709717427826,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717427826,
      "end": 1709717427826,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717427826,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717427827,
      "end": 1709717427827,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717427827,
      "end": 1709717427828,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717427828,
      "end": 1709717427828,
      "order": "normal"
    }
  ]
}
