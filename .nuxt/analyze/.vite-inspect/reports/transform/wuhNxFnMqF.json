{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/services/breakpoint/plugin/create-service.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, watch } from \"vue\";\nimport { b as isClient } from \"../../../utils/ssr.js\";\nimport { w as warn } from \"../../../utils/console.js\";\nimport { g as generateUniqueId } from \"../../../utils/uuid.js\";\nimport { a as addOrUpdateStyleElement } from \"../../../utils/dom.js\";\nimport { g as getGlobalProperty } from \"../../vue-plugin/utils/global-properties.js\";\nimport { u as useWindowSize } from \"../../../composables/useWindowSize.js\";\nimport { u as useReactiveComputed } from \"../../../composables/useReactiveComputed.js\";\nimport { u as useDocument } from \"../../../composables/useDocument.js\";\nconst createBreakpointConfigPlugin = (app) => {\n  var _a;\n  const globalConfig = (_a = getGlobalProperty(app, \"$vaConfig\")) == null ? void 0 : _a.globalConfig;\n  if (!globalConfig) {\n    warn(\"createBreakpointConfigPlugin: globalConfig is not defined!\");\n    return {};\n  }\n  const breakpointConfig = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint;\n    if (!breakpoint) {\n      warn(\"createBreakpointConfigPlugin: breakpointConfig is not defined!\");\n    }\n    return breakpoint ?? {};\n  });\n  if (!breakpointConfig.value.enabled) {\n    return {};\n  }\n  if (!breakpointConfig.value.thresholds || !Object.values(breakpointConfig.value.thresholds).length) {\n    warn(\"createBreakpointConfigPlugin: there are no defined thresholds!\");\n    return {};\n  }\n  const { windowSizes } = useWindowSize();\n  const isMounted = computed(isClient);\n  const currentBreakpoint = computed(() => {\n    if (!isMounted.value || !windowSizes.width) {\n      return;\n    }\n    return Object.entries(breakpointConfig.value.thresholds).reduce((acc, [key, value]) => {\n      if (windowSizes.width >= value) {\n        acc = key;\n      }\n      return acc;\n    }, \"xs\");\n  });\n  const screenClasses = computed(() => Object.keys(breakpointConfig.value.thresholds).reduce((acc, threshold) => {\n    acc[threshold] = `va-screen-${threshold}`;\n    return acc;\n  }, {}));\n  const generateHelpersMediaCss = () => {\n    let result = \"\";\n    Object.values(breakpointConfig.value.thresholds).forEach((thresholdValue, index) => {\n      result += `@media screen and (min-width: ${thresholdValue}px) {`;\n      result += `:root { --va-media-ratio: ${(index + 1) * 0.2} }`;\n      result += \"}\\n\";\n    });\n    return result;\n  };\n  const uniqueId = computed(generateUniqueId);\n  addOrUpdateStyleElement(`va-helpers-media-${uniqueId.value}`, generateHelpersMediaCss);\n  const getDocument = useDocument();\n  watch(currentBreakpoint, (newValue) => {\n    if (!newValue || !breakpointConfig.value.bodyClass || !getDocument.value) {\n      return;\n    }\n    getDocument.value.body.classList.forEach((className) => {\n      if (Object.values(screenClasses.value).includes(className)) {\n        getDocument.value.body.classList.remove(className);\n      }\n    });\n    getDocument.value.body.classList.add(screenClasses.value[newValue]);\n  }, { immediate: true });\n  const breakpointHelpers = computed(() => {\n    const isXs = currentBreakpoint.value === \"xs\";\n    const isSm = currentBreakpoint.value === \"sm\";\n    const isMd = currentBreakpoint.value === \"md\";\n    const isLg = currentBreakpoint.value === \"lg\";\n    const isXl = currentBreakpoint.value === \"xl\";\n    return {\n      xs: isXs,\n      sm: isSm,\n      md: isMd,\n      lg: isLg,\n      xl: isXl,\n      smUp: isSm || isMd || isLg || isXl,\n      mdUp: isMd || isLg || isXl,\n      lgUp: isLg || isXl,\n      smDown: isXs || isSm,\n      mdDown: isXs || isSm || isMd,\n      lgDown: isXs || isSm || isMd || isLg\n    };\n  });\n  return useReactiveComputed(() => ({\n    width: windowSizes.width,\n    height: windowSizes.height,\n    current: currentBreakpoint.value,\n    thresholds: breakpointConfig.value.thresholds,\n    ...breakpointHelpers.value\n  }));\n};\nexport {\n  createBreakpointConfigPlugin as c\n};\n//# sourceMappingURL=create-service.js.map\n",
      "start": 1709717416152,
      "end": 1709717416482,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717416482,
      "end": 1709717416482,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717416482,
      "end": 1709717416483,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717416483,
      "end": 1709717416483,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717416483,
      "end": 1709717416483,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717416500,
      "end": 1709717416500,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717416501,
      "end": 1709717416501,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717416502,
      "end": 1709717416502,
      "order": "normal"
    }
  ]
}
