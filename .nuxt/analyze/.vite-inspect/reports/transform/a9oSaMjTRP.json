{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-affix/VaAffix-utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { t as throttle } from \"../../../vendor.js\";\nfunction getWindowHeight() {\n  return document.documentElement.clientHeight || window.innerHeight || document.body.clientHeight;\n}\nfunction computeAffixedState({\n  coordinates,\n  offsetTop,\n  offsetBottom,\n  target\n}) {\n  let isTopAffixed = false;\n  let isBottomAffixed = false;\n  const windowHeight = getWindowHeight();\n  if (offsetTop != null && windowHeight) {\n    if (target === window) {\n      isTopAffixed = coordinates.top <= offsetTop;\n    } else {\n      const { top } = target.getBoundingClientRect();\n      isTopAffixed = coordinates.top - top <= offsetTop;\n    }\n  }\n  if (offsetBottom != null && windowHeight) {\n    if (target === window) {\n      isBottomAffixed = coordinates.bottom >= windowHeight - offsetBottom;\n    } else {\n      const { bottom } = target.getBoundingClientRect();\n      isBottomAffixed = bottom - coordinates.bottom <= offsetBottom;\n    }\n  }\n  return {\n    isTopAffixed,\n    isBottomAffixed\n  };\n}\nfunction checkAffixedStateChange(currentState, nextState) {\n  return currentState.isTopAffixed !== nextState.isTopAffixed || currentState.isBottomAffixed !== nextState.isBottomAffixed;\n}\nfunction handleThrottledEvent(eventName, context) {\n  const { target, element, offsetTop, offsetBottom, setState, getState, initialPosition } = context;\n  if (!element) {\n    return;\n  }\n  const isInitialCall = !eventName;\n  const coordinates = element.getBoundingClientRect();\n  const options = {\n    offsetBottom,\n    offsetTop,\n    target\n  };\n  const nextState = isInitialCall && initialPosition ? computeAffixedState({ coordinates: initialPosition, ...options }) : computeAffixedState({ coordinates, ...options });\n  const prevState = getState();\n  if (checkAffixedStateChange(prevState, nextState)) {\n    setState({ ...nextState, width: coordinates.width });\n  } else if (prevState.width !== coordinates.width) {\n    setState({ ...prevState, width: coordinates.width });\n  }\n}\nfunction useCaptureDefault(eventName) {\n  return eventName === \"scroll\";\n}\nfunction useEventsHandlerWithThrottle(events, {\n  handler,\n  useCapture = useCaptureDefault,\n  wait = 50\n}) {\n  const clearHandlersArray = events.map((eventName) => {\n    const _handler = throttle((event) => handler(eventName, event), wait);\n    window.addEventListener(eventName, _handler, useCapture(eventName));\n    return () => window.removeEventListener(eventName, _handler, useCapture(eventName));\n  });\n  return () => clearHandlersArray.forEach((clear) => clear());\n}\nexport {\n  getWindowHeight as g,\n  handleThrottledEvent as h,\n  useEventsHandlerWithThrottle as u\n};\n//# sourceMappingURL=VaAffix-utils.js.map\n",
      "start": 1709717427042,
      "end": 1709717427213,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717427213,
      "end": 1709717427213,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717427213,
      "end": 1709717427214,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717427214,
      "end": 1709717427214,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717427215,
      "end": 1709717427215,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717427215,
      "end": 1709717427215,
      "order": "normal"
    }
  ]
}
