{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-date-picker/VaDatePicker.vue_vue_type_script_lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, ref, computed, watch, nextTick } from \"vue\";\nimport { u as useView } from \"./hooks/view.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { V as VaDayPicker } from \"./components/VaDayPicker/VaDayPicker.js\";\nimport { V as VaDatePickerHeader } from \"./components/VaDatePickerHeader/VaDatePickerHeader.js\";\nimport { V as VaMonthPicker } from \"./components/VaMonthPicker/VaMonthPicker.js\";\nimport { V as VaYearPicker } from \"./components/VaYearPicker/VaYearPicker.js\";\nimport { e as extractComponentProps, a as extractComponentEmits } from \"../../utils/component-options/extract-component-options.js\";\nimport { a as useStatefulProps, u as useStatefulEmits, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props.js\";\nconst DEFAULT_MONTH_NAMES = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst DEFAULT_WEEKDAY_NAMES = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\nconst _sfc_main = defineComponent({\n  name: \"VaDatePicker\",\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] },\n    monthNames: { type: Array, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object },\n    type: { type: String, default: \"day\" },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    // Colors\n    color: { type: String, default: void 0 },\n    weekendsColor: { type: String, default: void 0 }\n  },\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker)\n  ],\n  setup(props, { emit }) {\n    const currentPicker = ref();\n    const { valueComputed } = useStateful(props, emit);\n    const { syncView } = useView(props, emit, { type: props.type });\n    const classComputed = computed(() => ({\n      \"va-date-picker_without-week-days\": props.hideWeekDays,\n      \"va-date-picker_disabled\": props.disabled\n    }));\n    const onDayModelValueUpdate = (modelValue) => {\n      if (props.readonly) {\n        return;\n      }\n      if (props.type === \"day\") {\n        valueComputed.value = modelValue;\n      }\n    };\n    const onMonthClick = (date) => {\n      emit(\"click:month\", date);\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      if (props.type !== \"month\") {\n        syncView.value = { type: \"day\", year, month };\n      }\n    };\n    const onMonthModelValueUpdate = (modelValue) => {\n      if (props.type === \"month\") {\n        valueComputed.value = modelValue;\n      }\n    };\n    const onYearClick = (date) => {\n      emit(\"click:year\", date);\n      const year = date.getFullYear();\n      if (props.type !== \"year\") {\n        syncView.value = { type: \"month\", year, month: syncView.value.month };\n      }\n    };\n    const onYearModelValueUpdate = (modelValue) => {\n      if (props.type === \"year\") {\n        valueComputed.value = modelValue;\n      }\n    };\n    const { colorsToCSSVariable } = useColors();\n    const styleComputed = computed(() => ({\n      ...colorsToCSSVariable({\n        color: props.color,\n        \"weekends-color\": props.weekendsColor\n      }, \"va-date-picker\")\n    }));\n    const focusCurrentPicker = () => {\n      var _a;\n      return (_a = currentPicker.value) == null ? void 0 : _a.$el.focus();\n    };\n    watch(syncView, (newValue, prevValue) => {\n      if (newValue.type === prevValue.type) {\n        return;\n      }\n      nextTick(focusCurrentPicker);\n    });\n    const isPickerReadonly = (pickerName) => {\n      return props.readonly && props.type === pickerName;\n    };\n    return {\n      dayPickerProps: filterComponentProps(extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(extractComponentProps(VaYearPicker)),\n      syncView,\n      classComputed,\n      valueComputed,\n      onDayModelValueUpdate,\n      onMonthClick,\n      onMonthModelValueUpdate,\n      onYearClick,\n      onYearModelValueUpdate,\n      styleComputed,\n      currentPicker,\n      focusCurrentPicker,\n      isPickerReadonly\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n\nimport '../../../VaDatePicker.css';\n//# sourceMappingURL=VaDatePicker.vue_vue_type_script_lang.js.map\n",
      "start": 1709717422095,
      "end": 1709717422474,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717422474,
      "end": 1709717422474,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717422474,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717422475,
      "end": 1709717422475,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717422475,
      "end": 1709717422476,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717422476,
      "end": 1709717422476,
      "order": "normal"
    }
  ]
}
