{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/services/colors-classes/plugin/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { watch } from \"vue\";\nimport { i as isServer } from \"../../../utils/ssr.js\";\nimport { u as useGlobalConfig } from \"../../../composables/useGlobalConfig.js\";\nimport { a as addOrUpdateStyleElement } from \"../../../utils/dom.js\";\nimport { d as defineVuesticPlugin } from \"../../vue-plugin/utils/define-vuestic-plugin.js\";\nimport { d as defineGlobalProperty } from \"../../vue-plugin/utils/global-properties.js\";\nconst getColorsClassesHelpers = (helpers, colors) => {\n  const colorsEntries = Object.entries(colors);\n  return helpers.reduce((acc, helper) => acc.concat(\n    colorsEntries.map(([colorName, colorValue]) => ({\n      ...helper,\n      postfix: helper.postfix ?? colorName,\n      value: helper.value ?? colorValue\n    }))\n  ), []);\n};\nconst getColorsClassesStyles = (helpers) => {\n  return helpers.reduce((styles, helper) => {\n    const style = [helper.property].flat().map((prop) => `${prop}: ${helper.value};`).join(\"\");\n    styles += `.va-${helper.prefix}--${helper.postfix} { ${style} }`;\n    return styles;\n  }, \"\");\n};\nconst handleConfigUpdate = (helpers, colors) => {\n  const coloredHelpers = getColorsClassesHelpers(helpers, colors);\n  addOrUpdateStyleElement(\n    \"va-color-helpers\",\n    () => getColorsClassesStyles(coloredHelpers)\n  );\n};\nconst createColorHelpersPlugin = () => {\n  if (isServer()) {\n    return;\n  }\n  const { globalConfig } = useGlobalConfig();\n  watch(() => globalConfig.value.colorsClasses, (newHelpers) => {\n    if (newHelpers.length) {\n      handleConfigUpdate(newHelpers, globalConfig.value.colors.variables);\n    }\n  }, { immediate: true, deep: true });\n  watch(() => globalConfig.value.colors.variables, (newColors) => {\n    if (!newColors) {\n      return;\n    }\n    handleConfigUpdate(globalConfig.value.colorsClasses, newColors);\n  }, { immediate: true, deep: true });\n  return {\n    renderColorHelpers: () => {\n      const coloredHelpers = getColorsClassesHelpers(globalConfig.value.colorsClasses, globalConfig.value.colors.variables);\n      return getColorsClassesStyles(coloredHelpers);\n    }\n  };\n};\nconst ColorsClassesPlugin = defineVuesticPlugin(() => ({\n  install(app) {\n    defineGlobalProperty(app, \"$vaColorsClasses\", createColorHelpersPlugin());\n  }\n}));\nexport {\n  ColorsClassesPlugin as C\n};\n//# sourceMappingURL=index.js.map\n",
      "start": 1709717401850,
      "end": 1709717402152,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717402153,
      "end": 1709717402153,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717402153,
      "end": 1709717402156,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717402156,
      "end": 1709717402160,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717402160,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717402161,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717402161,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717402161,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717402161,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717402161,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717402161,
      "end": 1709717402161,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717402161,
      "end": 1709717402162,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717402162,
      "end": 1709717402162,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717402163,
      "end": 1709717402163,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717402163,
      "end": 1709717402163,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717402163,
      "end": 1709717402163,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717402163,
      "end": 1709717402163,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717402163,
      "end": 1709717402163,
      "order": "normal"
    }
  ]
}
