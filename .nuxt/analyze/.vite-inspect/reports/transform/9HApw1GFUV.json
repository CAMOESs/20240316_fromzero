{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/composables/useRouterLink.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, getCurrentInstance } from \"vue\";\nimport { u as useGlobalConfig } from \"./useGlobalConfig.js\";\nconst useRouterLinkProps = {\n  tag: { type: String, default: \"span\" },\n  to: { type: [String, Object], default: void 0 },\n  replace: { type: Boolean, default: void 0 },\n  append: { type: Boolean, default: void 0 },\n  exact: { type: Boolean, default: void 0 },\n  activeClass: { type: String, default: void 0 },\n  exactActiveClass: { type: String, default: void 0 },\n  href: { type: String, default: void 0 },\n  target: { type: String, default: void 0 },\n  disabled: { type: Boolean, default: false }\n};\nconst useRouterLink = (props) => {\n  var _a;\n  const globalProperties = computed(() => {\n    var _a2;\n    return (_a2 = getCurrentInstance()) == null ? void 0 : _a2.appContext.config.globalProperties;\n  });\n  const vueRouter = computed(() => {\n    var _a2;\n    return (_a2 = globalProperties.value) == null ? void 0 : _a2.$router;\n  });\n  const vueRoute = computed(() => {\n    var _a2;\n    return (_a2 = globalProperties.value) == null ? void 0 : _a2.$route;\n  });\n  const { getGlobalConfig } = useGlobalConfig();\n  const routerComponent = getGlobalConfig().routerComponent;\n  const isNuxt = !!((_a = globalProperties.value) == null ? void 0 : _a.$nuxt);\n  const isNuxtLink = computed(() => !!(!props.disabled && props.to && isNuxt && routerComponent));\n  const tagComputed = computed(() => {\n    if (props.disabled) {\n      return props.tag;\n    }\n    if (props.href && !props.to) {\n      return \"a\";\n    }\n    if (isNuxtLink.value) {\n      return routerComponent;\n    }\n    if (props.to) {\n      return \"router-link\";\n    }\n    return props.tag || \"div\";\n  });\n  const isLinkTag = computed(() => isNuxtLink.value || [\"a\", \"router-link\"].includes(tagComputed.value));\n  const linkAttributesComputed = computed(() => {\n    if (!isLinkTag.value) {\n      return {};\n    }\n    return tagComputed.value === \"a\" ? {\n      target: props.target,\n      href: hrefComputed.value\n    } : {\n      target: props.target,\n      to: props.to,\n      replace: props.replace,\n      append: props.append,\n      activeClass: props.activeClass,\n      exact: props.exact,\n      exactActiveClass: props.exactActiveClass\n    };\n  });\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) {\n      return false;\n    }\n    const to = vueRouter.value.resolve(props.to).href;\n    const currentHref = vueRouter.value.currentRoute.value.path;\n    return to.replace(\"#\", \"\") === currentHref.replace(\"#\", \"\");\n  });\n  const hrefComputed = computed(() => {\n    var _a2;\n    return props.href || (props.to ? (_a2 = vueRouter.value) == null ? void 0 : _a2.resolve(props.to, vueRoute.value).href : void 0);\n  });\n  return {\n    isLinkTag,\n    tagComputed,\n    hrefComputed,\n    isActiveRouterLink,\n    linkAttributesComputed\n  };\n};\nexport {\n  useRouterLink as a,\n  useRouterLinkProps as u\n};\n//# sourceMappingURL=useRouterLink.js.map\n",
      "start": 1709717426894,
      "end": 1709717427074,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717427075,
      "end": 1709717427075,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717427076,
      "end": 1709717427076,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717427076,
      "end": 1709717427077,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717427077,
      "end": 1709717427077,
      "order": "normal"
    }
  ]
}
