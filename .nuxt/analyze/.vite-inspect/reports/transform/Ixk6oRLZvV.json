{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-time-picker/VaTimePicker.vue_vue_type_script_lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, ref, computed } from \"vue\";\nimport { u as useTimePicker } from \"./hooks/useTimePicker.js\";\nimport { V as VaTimePickerColumn } from \"./components/VaTimePickerColumn/index.js\";\nimport { u as useCSSVariables } from \"../../composables/useCSSVariables.js\";\nimport { a as useStatefulProps, u as useStatefulEmits, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useFormFieldProps, a as useFormField } from \"../../composables/useFormField.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useArrayRefs } from \"../../composables/useArrayRefs.js\";\nconst _sfc_main = defineComponent({\n  name: \"VaTimePicker\",\n  components: { VaTimePickerColumn },\n  props: {\n    ...useStatefulProps,\n    ...useFormFieldProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Date, required: false },\n    ampm: { type: Boolean, default: false },\n    hidePeriodSwitch: { type: Boolean, default: false },\n    periodUpdatesModelValue: { type: Boolean, default: true },\n    // Update model value when switching period automatically\n    view: { type: String, default: \"minutes\" },\n    hoursFilter: { type: Function },\n    minutesFilter: { type: Function },\n    secondsFilter: { type: Function },\n    framed: { type: Boolean, default: false },\n    cellHeight: { type: Number, default: 30 },\n    visibleCellsCount: { type: Number, default: 7 }\n  },\n  emits: [...useStatefulEmits],\n  setup(props, { emit }) {\n    const { valueComputed } = useStateful(props, emit);\n    const { columns, isPM } = useTimePicker(props, valueComputed);\n    const { setItemRef, itemRefs: pickers } = useArrayRefs();\n    const activeColumnIndex = ref();\n    const focus = (idx = 0) => {\n      var _a;\n      (_a = pickers.value[idx]) == null ? void 0 : _a.focus();\n    };\n    const blur = (idx) => {\n      var _a;\n      idx ? (_a = pickers.value[idx]) == null ? void 0 : _a.blur() : pickers.value.forEach((el) => el == null ? void 0 : el.blur());\n    };\n    const { computedClasses: computedFormClasses } = useFormField(\"va-time-picker\", props);\n    const focusNext = () => {\n      const nextIndex = ((activeColumnIndex == null ? void 0 : activeColumnIndex.value) || 0) + 1;\n      activeColumnIndex.value = nextIndex % columns.value.length;\n      focus(activeColumnIndex.value);\n    };\n    const focusPrev = () => {\n      const nextIndex = ((activeColumnIndex == null ? void 0 : activeColumnIndex.value) || 0) - 1 + columns.value.length;\n      activeColumnIndex.value = nextIndex % columns.value.length;\n      focus(activeColumnIndex.value);\n    };\n    const computedClasses = computed(() => ({\n      ...computedFormClasses,\n      \"va-time-picker--framed\": props.framed\n    }));\n    const computedStyles = useCSSVariables(\"va-time-picker\", () => {\n      const gapHeight = (props.visibleCellsCount - 1) / 2 * props.cellHeight;\n      return {\n        height: `${props.cellHeight * props.visibleCellsCount}px`,\n        \"cell-height\": `${props.cellHeight}px`,\n        \"column-gap-height\": `${gapHeight}px`\n      };\n    });\n    return {\n      columns,\n      computedStyles,\n      computedClasses,\n      isPM,\n      pickers,\n      setItemRef,\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n      focus,\n      blur\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n\nimport '../../../VaTimePicker.css';\n//# sourceMappingURL=VaTimePicker.vue_vue_type_script_lang.js.map\n",
      "start": 1709717423358,
      "end": 1709717423565,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717423565,
      "end": 1709717423565,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717423565,
      "end": 1709717423566,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717423566,
      "end": 1709717423566,
      "order": "normal"
    }
  ]
}
