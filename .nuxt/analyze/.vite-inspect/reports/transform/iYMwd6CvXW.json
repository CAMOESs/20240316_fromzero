{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/composables/useIntersectionObserver.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, computed, watch, onBeforeUnmount, unref } from \"vue\";\nimport { u as unwrapEl } from \"../utils/unwrapEl.js\";\nconst useIntersectionObserver = (cb, options = ref({}), target = ref([]), enabled = true) => {\n  const observer = ref();\n  const disconnectObserver = () => {\n    var _a;\n    (_a = observer.value) == null ? void 0 : _a.disconnect();\n  };\n  const observeTarget = (target2) => {\n    var _a;\n    const disclosedTarget = unwrapEl(unref(target2));\n    disclosedTarget && ((_a = observer.value) == null ? void 0 : _a.observe(disclosedTarget));\n  };\n  const observeAll = (targets) => {\n    targets.forEach(observeTarget);\n  };\n  const initObserver = () => {\n    observer.value = new IntersectionObserver(cb, options.value);\n  };\n  const isIntersectionDisabled = computed(() => !enabled || !(typeof window !== \"undefined\" && \"IntersectionObserver\" in window));\n  watch([target, options], ([newTarget]) => {\n    if (isIntersectionDisabled.value) {\n      return;\n    }\n    disconnectObserver();\n    if (!newTarget) {\n      return;\n    }\n    initObserver();\n    Array.isArray(newTarget) ? observeAll(newTarget) : observeTarget(newTarget);\n  }, { immediate: true });\n  onBeforeUnmount(disconnectObserver);\n  return { isIntersectionDisabled };\n};\nexport {\n  useIntersectionObserver as u\n};\n//# sourceMappingURL=useIntersectionObserver.js.map\n",
      "start": 1709717427382,
      "end": 1709717427573,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717427574,
      "end": 1709717427574,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717427575,
      "end": 1709717427575,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717427576,
      "end": 1709717427576,
      "order": "normal"
    }
  ]
}
