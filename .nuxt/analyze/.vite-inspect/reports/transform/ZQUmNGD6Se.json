{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-tabs/VaTabs.vue_vue_type_script_lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, shallowRef, ref, reactive, computed, unref, provide, watch, onMounted } from \"vue\";\nimport { T as TabsViewKey } from \"./types.js\";\nimport { V as VaButton } from \"../va-button/index.js\";\nimport { V as VaConfig } from \"../va-config/VaConfig.js\";\nimport { a as useStatefulProps, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useResizeObserver } from \"../../composables/useResizeObserver.js\";\nimport { u as useTranslation } from \"../../composables/useTranslation.js\";\nconst getClientWidth = (element) => (element == null ? void 0 : element.clientWidth) || 0;\nconst _sfc_main = defineComponent({\n  name: \"VaTabs\",\n  components: { VaButton, VaConfig },\n  emits: [\"update:modelValue\", \"click:next\", \"click:prev\"],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: [String, Number], default: null },\n    left: { type: Boolean, default: true },\n    right: { type: Boolean, default: false },\n    center: { type: Boolean, default: false },\n    grow: { type: Boolean, default: false },\n    hidePagination: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    hideSlider: { type: Boolean, default: false },\n    vertical: { type: Boolean, default: false },\n    color: { type: String, default: \"primary\" },\n    prevIcon: { type: String, default: \"va-arrow-left\" },\n    nextIcon: { type: String, default: \"va-arrow-right\" },\n    ariaMoveRightLabel: { type: String, default: \"$t:movePaginationLeft\" },\n    ariaMoveLeftLabel: { type: String, default: \"$t:movePaginationRight\" }\n  },\n  setup: (props, { emit }) => {\n    const wrapper = shallowRef();\n    const container = shallowRef();\n    const tabs = shallowRef();\n    const tabsList = ref([]);\n    const sliderHeight = ref(null);\n    const sliderWidth = ref(null);\n    const sliderOffsetX = ref(0);\n    const sliderOffsetY = ref(0);\n    const showPagination = ref(false);\n    const tabsContentOffset = ref(0);\n    const startingXPoint = ref(0);\n    const animationIncluded = ref(false);\n    const { valueComputed: tabSelected } = useStateful(props, emit);\n    const tabConfig = reactive({\n      VaTab: {\n        color: props.color\n      }\n    });\n    const computedClass = computed(() => {\n      const { left, right, center, grow, disabled } = props;\n      return {\n        \"va-tabs__container--left\": left && !right && !center && !grow,\n        \"va-tabs__container--right\": right,\n        \"va-tabs__container--center\": center,\n        \"va-tabs__container--grow\": grow,\n        \"va-tabs__container--disabled\": disabled\n      };\n    });\n    const computedTabsClass = computed(() => ({ \"va-tabs--vertical\": props.vertical }));\n    const { getColor } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const sliderStyles = computed(() => {\n      if (props.hideSlider) {\n        return { display: \"none\" };\n      }\n      return {\n        backgroundColor: colorComputed.value,\n        height: props.vertical ? `${sliderHeight.value}px` : \"\",\n        width: props.vertical ? \"\" : `${sliderWidth.value}px`,\n        transform: `translateY(-${sliderOffsetY.value}px) translateX(${sliderOffsetX.value}px)`,\n        transition: animationIncluded.value ? \"var(--va-tabs-slider-wrapper-transition)\" : \"\"\n      };\n    });\n    const paginationControlledStyles = computed(() => {\n      if (props.vertical) {\n        return {\n          transform: \"translateX(0px)\"\n        };\n      }\n      return {\n        transform: `translateX(${startingXPoint.value - tabsContentOffset.value}px)`,\n        transition: animationIncluded.value ? \"var(--va-tabs-slider-transition)\" : \"\",\n        position: props.hidePagination ? \"unset\" : \"absolute\"\n      };\n    });\n    const disablePaginationLeft = computed(() => tabsContentOffset.value === 0);\n    const disablePaginationRight = computed(() => {\n      const lastTab = tabsList.value[tabsList.value.length - 1];\n      const leftSidePosition = unref(lastTab.leftSidePosition);\n      const rightSidePosition = unref(lastTab.rightSidePosition);\n      const containerClientWidth = getClientWidth(container.value);\n      return rightSidePosition <= tabsContentOffset.value + containerClientWidth || leftSidePosition <= tabsContentOffset.value;\n    });\n    const resetSliderSizes = () => {\n      sliderWidth.value = 0;\n      sliderHeight.value = 0;\n    };\n    const moveToTab = (tab) => {\n      const containerClientWidth = getClientWidth(container.value);\n      const leftSidePosition = unref(tab.leftSidePosition);\n      const rightSidePosition = unref(tab.rightSidePosition);\n      if (!showPagination.value) {\n        tabsContentOffset.value = 0;\n        return;\n      }\n      if (leftSidePosition - tabsContentOffset.value >= 0 && rightSidePosition - tabsContentOffset.value <= containerClientWidth) {\n        return;\n      }\n      if (leftSidePosition - tabsContentOffset.value < 0) {\n        tabsContentOffset.value = leftSidePosition;\n        return;\n      }\n      if (rightSidePosition - tabsContentOffset.value > containerClientWidth) {\n        tabsContentOffset.value = rightSidePosition - containerClientWidth;\n        return;\n      }\n      tabsContentOffset.value = 0;\n    };\n    const updateStartingXPoint = () => {\n      startingXPoint.value = 0;\n      if (!showPagination.value) {\n        return;\n      }\n      const containerClientWidth = getClientWidth(container.value);\n      const tabsClientWidth = getClientWidth(tabs.value);\n      if (props.right) {\n        startingXPoint.value = tabsClientWidth - containerClientWidth;\n      } else if (props.center) {\n        startingXPoint.value = Math.floor((tabsClientWidth - containerClientWidth) / 2);\n      }\n    };\n    const updateTabsState = () => {\n      resetSliderSizes();\n      tabsList.value.forEach((tab) => {\n        var _a;\n        tab.updateSidePositions();\n        const isTabSelected = (((_a = tab.name) == null ? void 0 : _a.value) || tab.id) === tabSelected.value;\n        tab.isActive = tab.isActiveRouterLink || isTabSelected;\n        if (tab.isActive) {\n          moveToTab(tab);\n          updateSlider(tab);\n        }\n      });\n      updateStartingXPoint();\n    };\n    const updatePagination = () => {\n      const tabsClientWidth = getClientWidth(tabs.value);\n      const wrapperClientWidth = getClientWidth(wrapper.value);\n      requestAnimationFrame(() => {\n        showPagination.value = !!(tabs.value && wrapper.value && tabsClientWidth > wrapperClientWidth);\n      });\n    };\n    const movePaginationLeft = () => {\n      var _a, _b;\n      const containerClientWidth = getClientWidth(container.value);\n      let offsetToSet = tabsContentOffset.value - containerClientWidth;\n      for (let i = 0; i < tabsList.value.length - 1; i++) {\n        const currentTabLeftSidePosition = unref((_a = tabsList.value[i]) == null ? void 0 : _a.leftSidePosition);\n        const nextTabLeftSidePosition = unref((_b = tabsList.value[i + 1]) == null ? void 0 : _b.leftSidePosition);\n        if (currentTabLeftSidePosition > offsetToSet && currentTabLeftSidePosition < tabsContentOffset.value || nextTabLeftSidePosition >= tabsContentOffset.value) {\n          offsetToSet = currentTabLeftSidePosition;\n          break;\n        }\n      }\n      tabsContentOffset.value = Math.max(0, offsetToSet);\n      emit(\"click:prev\");\n    };\n    const movePaginationRight = () => {\n      var _a;\n      const containerClientWidth = getClientWidth(container.value);\n      const containerRightSide = tabsContentOffset.value + containerClientWidth;\n      let offsetToSet = containerRightSide;\n      for (let i = 0; i < tabsList.value.length - 1; i++) {\n        const rightSidePosition2 = unref(tabsList.value[i].rightSidePosition);\n        if (rightSidePosition2 > containerRightSide) {\n          offsetToSet = unref(tabsList.value[i].leftSidePosition);\n          if (tabsContentOffset.value < offsetToSet) {\n            break;\n          }\n        }\n      }\n      const rightSidePosition = unref((_a = tabsList.value[tabsList.value.length - 1]) == null ? void 0 : _a.rightSidePosition);\n      const maxOffset = rightSidePosition - containerClientWidth;\n      offsetToSet = Math.min(maxOffset, offsetToSet);\n      tabsContentOffset.value = Math.max(0, offsetToSet);\n      emit(\"click:next\");\n    };\n    const updateSlider = (tab) => {\n      var _a;\n      const tabElement = unref(tab.tabElement);\n      const tabOffsetTop = (tabElement == null ? void 0 : tabElement.offsetTop) || 0;\n      const tabOffsetLeft = (tabElement == null ? void 0 : tabElement.offsetLeft) || 0;\n      const tabClientHeight = (tabElement == null ? void 0 : tabElement.clientHeight) || 0;\n      const tabClientWidth = (tabElement == null ? void 0 : tabElement.clientWidth) || 0;\n      if (props.vertical) {\n        const containerClientHeight = ((_a = container.value) == null ? void 0 : _a.clientHeight) || 0;\n        const calculatedSliderOffsetY = containerClientHeight - tabOffsetTop - tabClientHeight;\n        sliderOffsetY.value = Math.max(calculatedSliderOffsetY, 0);\n        sliderHeight.value = tabClientHeight;\n        sliderOffsetX.value = 0;\n        sliderWidth.value = 0;\n      } else {\n        sliderOffsetX.value = tabOffsetLeft;\n        sliderWidth.value = tabClientWidth;\n        sliderOffsetY.value = 0;\n        sliderHeight.value = 0;\n      }\n    };\n    const includeAnimation = () => {\n      if (!animationIncluded.value) {\n        requestAnimationFrame(() => {\n          animationIncluded.value = true;\n        });\n      }\n    };\n    const selectTab = (tab) => {\n      var _a;\n      if (!tab) {\n        return;\n      }\n      tabSelected.value = ((_a = tab.name) == null ? void 0 : _a.value) || tab.id;\n      if (props.stateful) {\n        updateTabsState();\n      }\n    };\n    const registerTab = (tab) => {\n      var _a;\n      const idx = tabsList.value.push(tab) - 1;\n      tab.id = ((_a = tab.name) == null ? void 0 : _a.value) || idx;\n    };\n    const unregisterTab = (tab) => {\n      tabsList.value = tabsList.value.filter((filteredTab) => filteredTab.id !== tab.id);\n      tabsList.value.forEach((tabListItem, idx) => {\n        var _a;\n        tabListItem.id = ((_a = tabListItem.name) == null ? void 0 : _a.value) || idx;\n      });\n    };\n    provide(TabsViewKey, {\n      parentDisabled: props.disabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab\n    });\n    watch(() => props.modelValue, updateTabsState);\n    useResizeObserver([wrapper], updatePagination);\n    useResizeObserver([container], updateTabsState);\n    onMounted(() => {\n      requestAnimationFrame(() => {\n        includeAnimation();\n      });\n    });\n    return {\n      ...useTranslation(),\n      wrapper,\n      container,\n      tabs,\n      tabsList,\n      sliderHeight,\n      sliderWidth,\n      sliderOffsetX,\n      sliderOffsetY,\n      showPagination,\n      tabsContentOffset,\n      startingXPoint,\n      animationIncluded,\n      colorComputed,\n      tabConfig,\n      computedClass,\n      computedTabsClass,\n      tabSelected,\n      sliderStyles,\n      paginationControlledStyles,\n      disablePaginationLeft,\n      disablePaginationRight,\n      resetSliderSizes,\n      moveToTab,\n      updateStartingXPoint,\n      updateTabsState,\n      updatePagination,\n      movePaginationLeft,\n      movePaginationRight,\n      updateSlider,\n      includeAnimation,\n      selectTab\n    };\n  }\n});\nexport {\n  _sfc_main as _\n};\n\nimport '../../../VaTabs.css';\n//# sourceMappingURL=VaTabs.vue_vue_type_script_lang.js.map\n",
      "start": 1709717423301,
      "end": 1709717423550,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717423550,
      "end": 1709717423550,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717423550,
      "end": 1709717423551,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717423551,
      "end": 1709717423551,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717423551,
      "end": 1709717423552,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717423553,
      "end": 1709717423553,
      "order": "normal"
    }
  ]
}
