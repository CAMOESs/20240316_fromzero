{
  "resolvedId": "/mnt/1c4c2374-6f70-425b-ab4c-d1db6332863a/carlos/project/2024/CQM/node_modules/vuestic-ui/dist/es/src/components/va-carousel/hooks/useCarouselAnimation.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { onMounted, onBeforeUnmount, ref, computed, watch } from \"vue\";\nconst useCarouselAnimation = (props, currentSlide) => {\n  let animationInterval = -1;\n  const start = () => {\n    if (!props.autoscroll) {\n      return;\n    }\n    clearInterval(animationInterval);\n    animationInterval = setInterval(() => {\n      currentSlide.value += 1;\n      if (currentSlide.value >= props.items.length) {\n        currentSlide.value = 0;\n      }\n    }, props.autoscrollInterval);\n  };\n  let pauseTimeout;\n  const pause = () => {\n    if (!props.autoscroll) {\n      return;\n    }\n    clearInterval(animationInterval);\n    pauseTimeout = setTimeout(() => {\n      start();\n      clearTimeout(pauseTimeout);\n    }, props.autoscrollPauseDuration);\n  };\n  const stop = () => {\n    clearInterval(animationInterval);\n    clearTimeout(pauseTimeout);\n  };\n  onMounted(() => start());\n  onBeforeUnmount(() => stop());\n  const withPause = (fn) => {\n    return (...args) => {\n      pause();\n      fn(...args);\n    };\n  };\n  const slidesContainerStyle = ref({\n    transition: void 0\n  });\n  const sliderToBeShown = ref(0);\n  const computedSlidesStyle = computed(() => {\n    if (props.effect === \"fade\") {\n      return {\n        ...slidesContainerStyle.value,\n        transition: \"none\"\n      };\n    }\n    if (props.vertical) {\n      return {\n        ...slidesContainerStyle.value,\n        transform: `translateY(${sliderToBeShown.value * -100}%)`\n      };\n    }\n    return {\n      ...slidesContainerStyle.value,\n      transform: `translateX(${sliderToBeShown.value * -100}%)`\n    };\n  });\n  const animator = {\n    isAnimating: false,\n    speed: 0.3,\n    order: [],\n    move(from, to) {\n      const last = props.items.length - 1;\n      const firstAfterLast = props.items.length;\n      if (to === 0 && from === last) {\n        this.order.push({ to: firstAfterLast });\n        this.order.push({ to: 0, animate: false });\n      } else if (to === last && from === 0) {\n        this.order.push({ to: firstAfterLast, animate: false });\n        this.order.push({ to });\n      } else {\n        this.order.push({ to });\n      }\n      if (!this.isAnimating) {\n        this.runAnimation();\n      }\n    },\n    runAnimation() {\n      this.isAnimating = true;\n      const animation = this.order.shift();\n      if (!animation) {\n        this.isAnimating = false;\n        return;\n      }\n      sliderToBeShown.value = animation == null ? void 0 : animation.to;\n      if (animation.animate || animation.animate === void 0) {\n        slidesContainerStyle.value.transition = `all ${this.speed}s linear`;\n        setTimeout(() => {\n          this.runAnimation();\n        }, this.speed * 1e3);\n      } else {\n        slidesContainerStyle.value.transition = \"none\";\n        setTimeout(() => {\n          this.runAnimation();\n        }, 16);\n      }\n    }\n  };\n  watch(currentSlide, (newValue, oldValue) => {\n    animator.move(oldValue, newValue);\n  });\n  const slides = computed(() => {\n    if (props.effect === \"fade\") {\n      return [props.items[currentSlide.value]];\n    }\n    if (props.infinite || props.autoscroll) {\n      return [...props.items, props.items[0]];\n    }\n    return props.items;\n  });\n  return {\n    start,\n    pause,\n    stop,\n    withPause,\n    computedSlidesStyle,\n    slides\n  };\n};\nexport {\n  useCarouselAnimation as u\n};\n//# sourceMappingURL=useCarouselAnimation.js.map\n",
      "start": 1709717427090,
      "end": 1709717427236,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709717427236,
      "end": 1709717427236,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709717427236,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709717427237,
      "end": 1709717427237,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709717427238,
      "end": 1709717427238,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709717427240,
      "end": 1709717427240,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709717427240,
      "end": 1709717427240,
      "order": "normal"
    }
  ]
}
